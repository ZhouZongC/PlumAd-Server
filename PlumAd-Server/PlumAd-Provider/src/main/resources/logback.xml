<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml" />
    <logger name="org.springframework.web" level="INFO" />

    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <springProfile name="prod">

        <!-- 注意这里一定要放到springProfile里, 否则在你本机执行的时候还是会去找相应的文件 -->
        <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!--日志文件输出的文件名-->
                <FileNamePattern>log/%d{yyyyMMdd}/PlumAd-Provider.%i.log</FileNamePattern>
                <!--日志文件保留天数-->
                <maxHistory>15</maxHistory>
                <!--日志文件最大的大小-->
                <MaxFileSize>10MB</MaxFileSize>
                <!--日志文件总的的大小-->
                <totalSizeCap>30GB</totalSizeCap>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>

        <appender name="ErrorFILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
            <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印ERROR日志 -->
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!--日志文件输出的文件名-->
                <FileNamePattern>log/%d{yyyyMMdd}/PlumAd-Provider-Error.%i.log</FileNamePattern>
                <!--日志文件保留天数-->
                <maxHistory>15</maxHistory>
                <!--日志文件最大的大小-->
                <MaxFileSize>10MB</MaxFileSize>
                <!--日志文件总的的大小-->
                <totalSizeCap>30GB</totalSizeCap>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
                <charset>UTF-8</charset>
            </encoder>
        </appender>


        <appender name="KAFKA" class="com.mipay.journal.logback.appender.KafkaAppender">
            <topic>MiPay</topic>
            <kafkaProducerProperties>
                bootstrap.servers=localhost:9092
                retries=0
                value.serializer=org.apache.kafka.common.serialization.StringSerializer
                key.serializer=org.apache.kafka.common.serialization.StringSerializer
                <!--reconnect.backoff.ms=1-->
                producer.type=async
                request.required.acks=0
                <!--acks=0-->
                <!--producer.type=async -->
                <!--request.required.acks=1 -->
                <!--queue.buffering.max.ms=20000 -->
                <!--queue.buffering.max.messages=1000-->
                <!--queue.enqueue.timeout.ms = -1 -->
                <!--batch.num.messages=8-->
                <!--metadata.fetch.timeout.ms=3000-->
                <!--producer.type=sync-->
                <!--request.required.acks=1-->
                <!--reconnect.backoff.ms=3000-->
                <!--retry.backoff.ms=3000-->
            </kafkaProducerProperties>
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern> PlumAd-Provider@#@#%d{yyyy-MM-dd HH:mm:ss.SSS}@#@#[%thread]@#@#%-5level@#@#%logger{50}@#@#%msg%n</pattern>
            </layout>
        </appender>

        <appender name="asyncFile" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <queueSize>500</queueSize>
            <appender-ref ref="FILE" />
        </appender>

        <appender name="asyncErrorFile" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <queueSize>500</queueSize>
            <appender-ref ref="ErrorFILE" />
        </appender>

        <appender name="asyncKafka" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <queueSize>500</queueSize>
            <appender-ref ref="KAFKA" />
        </appender>

    </springProfile>

    <springProfile name="dev">
        <root level="INFO">
            <appender-ref ref="consoleAppender" />
        </root>
    </springProfile>

    <springProfile name="prod">
        <!--<root level="INFO">-->
            <!--<appender-ref ref="asyncKafka" />-->
        <!--</root>-->
        <root level="INFO">
            <appender-ref ref="asyncFile" />
            <appender-ref ref="asyncErrorFile" />
        </root>
    </springProfile>

</configuration>
